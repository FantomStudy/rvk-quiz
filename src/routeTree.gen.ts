/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as AdminRouteImport } from './routes/admin'
import { Route as StatisticLayoutRouteImport } from './routes/_statisticLayout'
import { Route as AdminLayoutRouteImport } from './routes/_adminLayout'
import { Route as IndexRouteImport } from './routes/index'
import { Route as testTestRouteImport } from './routes/(test)/test'
import { Route as testResultRouteImport } from './routes/(test)/result'
import { Route as testCompleteRouteImport } from './routes/(test)/complete'
import { Route as StatisticLayoutStatisticTheoryRouteImport } from './routes/_statisticLayout/statistic/theory'
import { Route as StatisticLayoutStatisticPracticeRouteImport } from './routes/_statisticLayout/statistic/practice'
import { Route as StatisticLayoutStatisticCommonRouteImport } from './routes/_statisticLayout/statistic/common'
import { Route as AdminLayoutAdminUsersRouteImport } from './routes/_adminLayout/admin/users'
import { Route as AdminLayoutAdminDashboardRouteImport } from './routes/_adminLayout/admin/dashboard'
import { Route as AdminLayoutAdminUserIdNominationIdRouteImport } from './routes/_adminLayout/admin/$userId.$nominationId'

const AdminRoute = AdminRouteImport.update({
  id: '/admin',
  path: '/admin',
  getParentRoute: () => rootRouteImport,
} as any)
const StatisticLayoutRoute = StatisticLayoutRouteImport.update({
  id: '/_statisticLayout',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminLayoutRoute = AdminLayoutRouteImport.update({
  id: '/_adminLayout',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const testTestRoute = testTestRouteImport.update({
  id: '/(test)/test',
  path: '/test',
  getParentRoute: () => rootRouteImport,
} as any)
const testResultRoute = testResultRouteImport.update({
  id: '/(test)/result',
  path: '/result',
  getParentRoute: () => rootRouteImport,
} as any)
const testCompleteRoute = testCompleteRouteImport.update({
  id: '/(test)/complete',
  path: '/complete',
  getParentRoute: () => rootRouteImport,
} as any)
const StatisticLayoutStatisticTheoryRoute =
  StatisticLayoutStatisticTheoryRouteImport.update({
    id: '/statistic/theory',
    path: '/statistic/theory',
    getParentRoute: () => StatisticLayoutRoute,
  } as any)
const StatisticLayoutStatisticPracticeRoute =
  StatisticLayoutStatisticPracticeRouteImport.update({
    id: '/statistic/practice',
    path: '/statistic/practice',
    getParentRoute: () => StatisticLayoutRoute,
  } as any)
const StatisticLayoutStatisticCommonRoute =
  StatisticLayoutStatisticCommonRouteImport.update({
    id: '/statistic/common',
    path: '/statistic/common',
    getParentRoute: () => StatisticLayoutRoute,
  } as any)
const AdminLayoutAdminUsersRoute = AdminLayoutAdminUsersRouteImport.update({
  id: '/admin/users',
  path: '/admin/users',
  getParentRoute: () => AdminLayoutRoute,
} as any)
const AdminLayoutAdminDashboardRoute =
  AdminLayoutAdminDashboardRouteImport.update({
    id: '/admin/dashboard',
    path: '/admin/dashboard',
    getParentRoute: () => AdminLayoutRoute,
  } as any)
const AdminLayoutAdminUserIdNominationIdRoute =
  AdminLayoutAdminUserIdNominationIdRouteImport.update({
    id: '/admin/$userId/$nominationId',
    path: '/admin/$userId/$nominationId',
    getParentRoute: () => AdminLayoutRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/admin': typeof AdminRoute
  '/complete': typeof testCompleteRoute
  '/result': typeof testResultRoute
  '/test': typeof testTestRoute
  '/admin/dashboard': typeof AdminLayoutAdminDashboardRoute
  '/admin/users': typeof AdminLayoutAdminUsersRoute
  '/statistic/common': typeof StatisticLayoutStatisticCommonRoute
  '/statistic/practice': typeof StatisticLayoutStatisticPracticeRoute
  '/statistic/theory': typeof StatisticLayoutStatisticTheoryRoute
  '/admin/$userId/$nominationId': typeof AdminLayoutAdminUserIdNominationIdRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/admin': typeof AdminRoute
  '/complete': typeof testCompleteRoute
  '/result': typeof testResultRoute
  '/test': typeof testTestRoute
  '/admin/dashboard': typeof AdminLayoutAdminDashboardRoute
  '/admin/users': typeof AdminLayoutAdminUsersRoute
  '/statistic/common': typeof StatisticLayoutStatisticCommonRoute
  '/statistic/practice': typeof StatisticLayoutStatisticPracticeRoute
  '/statistic/theory': typeof StatisticLayoutStatisticTheoryRoute
  '/admin/$userId/$nominationId': typeof AdminLayoutAdminUserIdNominationIdRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/_adminLayout': typeof AdminLayoutRouteWithChildren
  '/_statisticLayout': typeof StatisticLayoutRouteWithChildren
  '/admin': typeof AdminRoute
  '/(test)/complete': typeof testCompleteRoute
  '/(test)/result': typeof testResultRoute
  '/(test)/test': typeof testTestRoute
  '/_adminLayout/admin/dashboard': typeof AdminLayoutAdminDashboardRoute
  '/_adminLayout/admin/users': typeof AdminLayoutAdminUsersRoute
  '/_statisticLayout/statistic/common': typeof StatisticLayoutStatisticCommonRoute
  '/_statisticLayout/statistic/practice': typeof StatisticLayoutStatisticPracticeRoute
  '/_statisticLayout/statistic/theory': typeof StatisticLayoutStatisticTheoryRoute
  '/_adminLayout/admin/$userId/$nominationId': typeof AdminLayoutAdminUserIdNominationIdRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/admin'
    | '/complete'
    | '/result'
    | '/test'
    | '/admin/dashboard'
    | '/admin/users'
    | '/statistic/common'
    | '/statistic/practice'
    | '/statistic/theory'
    | '/admin/$userId/$nominationId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/admin'
    | '/complete'
    | '/result'
    | '/test'
    | '/admin/dashboard'
    | '/admin/users'
    | '/statistic/common'
    | '/statistic/practice'
    | '/statistic/theory'
    | '/admin/$userId/$nominationId'
  id:
    | '__root__'
    | '/'
    | '/_adminLayout'
    | '/_statisticLayout'
    | '/admin'
    | '/(test)/complete'
    | '/(test)/result'
    | '/(test)/test'
    | '/_adminLayout/admin/dashboard'
    | '/_adminLayout/admin/users'
    | '/_statisticLayout/statistic/common'
    | '/_statisticLayout/statistic/practice'
    | '/_statisticLayout/statistic/theory'
    | '/_adminLayout/admin/$userId/$nominationId'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AdminLayoutRoute: typeof AdminLayoutRouteWithChildren
  StatisticLayoutRoute: typeof StatisticLayoutRouteWithChildren
  AdminRoute: typeof AdminRoute
  testCompleteRoute: typeof testCompleteRoute
  testResultRoute: typeof testResultRoute
  testTestRoute: typeof testTestRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/admin': {
      id: '/admin'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AdminRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_statisticLayout': {
      id: '/_statisticLayout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof StatisticLayoutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_adminLayout': {
      id: '/_adminLayout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AdminLayoutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(test)/test': {
      id: '/(test)/test'
      path: '/test'
      fullPath: '/test'
      preLoaderRoute: typeof testTestRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(test)/result': {
      id: '/(test)/result'
      path: '/result'
      fullPath: '/result'
      preLoaderRoute: typeof testResultRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(test)/complete': {
      id: '/(test)/complete'
      path: '/complete'
      fullPath: '/complete'
      preLoaderRoute: typeof testCompleteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_statisticLayout/statistic/theory': {
      id: '/_statisticLayout/statistic/theory'
      path: '/statistic/theory'
      fullPath: '/statistic/theory'
      preLoaderRoute: typeof StatisticLayoutStatisticTheoryRouteImport
      parentRoute: typeof StatisticLayoutRoute
    }
    '/_statisticLayout/statistic/practice': {
      id: '/_statisticLayout/statistic/practice'
      path: '/statistic/practice'
      fullPath: '/statistic/practice'
      preLoaderRoute: typeof StatisticLayoutStatisticPracticeRouteImport
      parentRoute: typeof StatisticLayoutRoute
    }
    '/_statisticLayout/statistic/common': {
      id: '/_statisticLayout/statistic/common'
      path: '/statistic/common'
      fullPath: '/statistic/common'
      preLoaderRoute: typeof StatisticLayoutStatisticCommonRouteImport
      parentRoute: typeof StatisticLayoutRoute
    }
    '/_adminLayout/admin/users': {
      id: '/_adminLayout/admin/users'
      path: '/admin/users'
      fullPath: '/admin/users'
      preLoaderRoute: typeof AdminLayoutAdminUsersRouteImport
      parentRoute: typeof AdminLayoutRoute
    }
    '/_adminLayout/admin/dashboard': {
      id: '/_adminLayout/admin/dashboard'
      path: '/admin/dashboard'
      fullPath: '/admin/dashboard'
      preLoaderRoute: typeof AdminLayoutAdminDashboardRouteImport
      parentRoute: typeof AdminLayoutRoute
    }
    '/_adminLayout/admin/$userId/$nominationId': {
      id: '/_adminLayout/admin/$userId/$nominationId'
      path: '/admin/$userId/$nominationId'
      fullPath: '/admin/$userId/$nominationId'
      preLoaderRoute: typeof AdminLayoutAdminUserIdNominationIdRouteImport
      parentRoute: typeof AdminLayoutRoute
    }
  }
}

interface AdminLayoutRouteChildren {
  AdminLayoutAdminDashboardRoute: typeof AdminLayoutAdminDashboardRoute
  AdminLayoutAdminUsersRoute: typeof AdminLayoutAdminUsersRoute
  AdminLayoutAdminUserIdNominationIdRoute: typeof AdminLayoutAdminUserIdNominationIdRoute
}

const AdminLayoutRouteChildren: AdminLayoutRouteChildren = {
  AdminLayoutAdminDashboardRoute: AdminLayoutAdminDashboardRoute,
  AdminLayoutAdminUsersRoute: AdminLayoutAdminUsersRoute,
  AdminLayoutAdminUserIdNominationIdRoute:
    AdminLayoutAdminUserIdNominationIdRoute,
}

const AdminLayoutRouteWithChildren = AdminLayoutRoute._addFileChildren(
  AdminLayoutRouteChildren,
)

interface StatisticLayoutRouteChildren {
  StatisticLayoutStatisticCommonRoute: typeof StatisticLayoutStatisticCommonRoute
  StatisticLayoutStatisticPracticeRoute: typeof StatisticLayoutStatisticPracticeRoute
  StatisticLayoutStatisticTheoryRoute: typeof StatisticLayoutStatisticTheoryRoute
}

const StatisticLayoutRouteChildren: StatisticLayoutRouteChildren = {
  StatisticLayoutStatisticCommonRoute: StatisticLayoutStatisticCommonRoute,
  StatisticLayoutStatisticPracticeRoute: StatisticLayoutStatisticPracticeRoute,
  StatisticLayoutStatisticTheoryRoute: StatisticLayoutStatisticTheoryRoute,
}

const StatisticLayoutRouteWithChildren = StatisticLayoutRoute._addFileChildren(
  StatisticLayoutRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AdminLayoutRoute: AdminLayoutRouteWithChildren,
  StatisticLayoutRoute: StatisticLayoutRouteWithChildren,
  AdminRoute: AdminRoute,
  testCompleteRoute: testCompleteRoute,
  testResultRoute: testResultRoute,
  testTestRoute: testTestRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
