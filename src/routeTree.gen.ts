/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as HeaderLayoutRouteImport } from './routes/_headerLayout'
import { Route as HeaderLayoutIndexRouteImport } from './routes/_headerLayout/index'
import { Route as HeaderLayoutAdminRouteImport } from './routes/_headerLayout/admin'
import { Route as HeaderLayoutStatisticLayoutRouteImport } from './routes/_headerLayout/_statisticLayout'
import { Route as HeaderLayoutAdminLayoutRouteImport } from './routes/_headerLayout/_adminLayout'
import { Route as HeaderLayoutStatisticLayoutTheoryStateRouteImport } from './routes/_headerLayout/_statisticLayout/theoryState'
import { Route as HeaderLayoutStatisticLayoutPracticeStateRouteImport } from './routes/_headerLayout/_statisticLayout/practiceState'
import { Route as HeaderLayoutStatisticLayoutCommonStateRouteImport } from './routes/_headerLayout/_statisticLayout/commonState'
import { Route as HeaderLayoutdevTestRouteImport } from './routes/_headerLayout/(dev)/test'
import { Route as HeaderLayoutdevResultRouteImport } from './routes/_headerLayout/(dev)/result'
import { Route as HeaderLayoutdevCompleteRouteImport } from './routes/_headerLayout/(dev)/complete'
import { Route as HeaderLayoutAdminLayoutAdminUsersRouteImport } from './routes/_headerLayout/_adminLayout/admin/users'
import { Route as HeaderLayoutAdminLayoutAdminDashboardRouteImport } from './routes/_headerLayout/_adminLayout/admin/dashboard'
import { Route as HeaderLayoutAdminLayoutAdminUserIdNominationIdRouteImport } from './routes/_headerLayout/_adminLayout/admin/$userId.$nominationId'

const HeaderLayoutRoute = HeaderLayoutRouteImport.update({
  id: '/_headerLayout',
  getParentRoute: () => rootRouteImport,
} as any)
const HeaderLayoutIndexRoute = HeaderLayoutIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => HeaderLayoutRoute,
} as any)
const HeaderLayoutAdminRoute = HeaderLayoutAdminRouteImport.update({
  id: '/admin',
  path: '/admin',
  getParentRoute: () => HeaderLayoutRoute,
} as any)
const HeaderLayoutStatisticLayoutRoute =
  HeaderLayoutStatisticLayoutRouteImport.update({
    id: '/_statisticLayout',
    getParentRoute: () => HeaderLayoutRoute,
  } as any)
const HeaderLayoutAdminLayoutRoute = HeaderLayoutAdminLayoutRouteImport.update({
  id: '/_adminLayout',
  getParentRoute: () => HeaderLayoutRoute,
} as any)
const HeaderLayoutStatisticLayoutTheoryStateRoute =
  HeaderLayoutStatisticLayoutTheoryStateRouteImport.update({
    id: '/theoryState',
    path: '/theoryState',
    getParentRoute: () => HeaderLayoutStatisticLayoutRoute,
  } as any)
const HeaderLayoutStatisticLayoutPracticeStateRoute =
  HeaderLayoutStatisticLayoutPracticeStateRouteImport.update({
    id: '/practiceState',
    path: '/practiceState',
    getParentRoute: () => HeaderLayoutStatisticLayoutRoute,
  } as any)
const HeaderLayoutStatisticLayoutCommonStateRoute =
  HeaderLayoutStatisticLayoutCommonStateRouteImport.update({
    id: '/commonState',
    path: '/commonState',
    getParentRoute: () => HeaderLayoutStatisticLayoutRoute,
  } as any)
const HeaderLayoutdevTestRoute = HeaderLayoutdevTestRouteImport.update({
  id: '/(dev)/test',
  path: '/test',
  getParentRoute: () => HeaderLayoutRoute,
} as any)
const HeaderLayoutdevResultRoute = HeaderLayoutdevResultRouteImport.update({
  id: '/(dev)/result',
  path: '/result',
  getParentRoute: () => HeaderLayoutRoute,
} as any)
const HeaderLayoutdevCompleteRoute = HeaderLayoutdevCompleteRouteImport.update({
  id: '/(dev)/complete',
  path: '/complete',
  getParentRoute: () => HeaderLayoutRoute,
} as any)
const HeaderLayoutAdminLayoutAdminUsersRoute =
  HeaderLayoutAdminLayoutAdminUsersRouteImport.update({
    id: '/admin/users',
    path: '/admin/users',
    getParentRoute: () => HeaderLayoutAdminLayoutRoute,
  } as any)
const HeaderLayoutAdminLayoutAdminDashboardRoute =
  HeaderLayoutAdminLayoutAdminDashboardRouteImport.update({
    id: '/admin/dashboard',
    path: '/admin/dashboard',
    getParentRoute: () => HeaderLayoutAdminLayoutRoute,
  } as any)
const HeaderLayoutAdminLayoutAdminUserIdNominationIdRoute =
  HeaderLayoutAdminLayoutAdminUserIdNominationIdRouteImport.update({
    id: '/admin/$userId/$nominationId',
    path: '/admin/$userId/$nominationId',
    getParentRoute: () => HeaderLayoutAdminLayoutRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/admin': typeof HeaderLayoutAdminRoute
  '/': typeof HeaderLayoutIndexRoute
  '/complete': typeof HeaderLayoutdevCompleteRoute
  '/result': typeof HeaderLayoutdevResultRoute
  '/test': typeof HeaderLayoutdevTestRoute
  '/commonState': typeof HeaderLayoutStatisticLayoutCommonStateRoute
  '/practiceState': typeof HeaderLayoutStatisticLayoutPracticeStateRoute
  '/theoryState': typeof HeaderLayoutStatisticLayoutTheoryStateRoute
  '/admin/dashboard': typeof HeaderLayoutAdminLayoutAdminDashboardRoute
  '/admin/users': typeof HeaderLayoutAdminLayoutAdminUsersRoute
  '/admin/$userId/$nominationId': typeof HeaderLayoutAdminLayoutAdminUserIdNominationIdRoute
}
export interface FileRoutesByTo {
  '/admin': typeof HeaderLayoutAdminRoute
  '/': typeof HeaderLayoutIndexRoute
  '/complete': typeof HeaderLayoutdevCompleteRoute
  '/result': typeof HeaderLayoutdevResultRoute
  '/test': typeof HeaderLayoutdevTestRoute
  '/commonState': typeof HeaderLayoutStatisticLayoutCommonStateRoute
  '/practiceState': typeof HeaderLayoutStatisticLayoutPracticeStateRoute
  '/theoryState': typeof HeaderLayoutStatisticLayoutTheoryStateRoute
  '/admin/dashboard': typeof HeaderLayoutAdminLayoutAdminDashboardRoute
  '/admin/users': typeof HeaderLayoutAdminLayoutAdminUsersRoute
  '/admin/$userId/$nominationId': typeof HeaderLayoutAdminLayoutAdminUserIdNominationIdRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_headerLayout': typeof HeaderLayoutRouteWithChildren
  '/_headerLayout/_adminLayout': typeof HeaderLayoutAdminLayoutRouteWithChildren
  '/_headerLayout/_statisticLayout': typeof HeaderLayoutStatisticLayoutRouteWithChildren
  '/_headerLayout/admin': typeof HeaderLayoutAdminRoute
  '/_headerLayout/': typeof HeaderLayoutIndexRoute
  '/_headerLayout/(dev)/complete': typeof HeaderLayoutdevCompleteRoute
  '/_headerLayout/(dev)/result': typeof HeaderLayoutdevResultRoute
  '/_headerLayout/(dev)/test': typeof HeaderLayoutdevTestRoute
  '/_headerLayout/_statisticLayout/commonState': typeof HeaderLayoutStatisticLayoutCommonStateRoute
  '/_headerLayout/_statisticLayout/practiceState': typeof HeaderLayoutStatisticLayoutPracticeStateRoute
  '/_headerLayout/_statisticLayout/theoryState': typeof HeaderLayoutStatisticLayoutTheoryStateRoute
  '/_headerLayout/_adminLayout/admin/dashboard': typeof HeaderLayoutAdminLayoutAdminDashboardRoute
  '/_headerLayout/_adminLayout/admin/users': typeof HeaderLayoutAdminLayoutAdminUsersRoute
  '/_headerLayout/_adminLayout/admin/$userId/$nominationId': typeof HeaderLayoutAdminLayoutAdminUserIdNominationIdRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/admin'
    | '/'
    | '/complete'
    | '/result'
    | '/test'
    | '/commonState'
    | '/practiceState'
    | '/theoryState'
    | '/admin/dashboard'
    | '/admin/users'
    | '/admin/$userId/$nominationId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/admin'
    | '/'
    | '/complete'
    | '/result'
    | '/test'
    | '/commonState'
    | '/practiceState'
    | '/theoryState'
    | '/admin/dashboard'
    | '/admin/users'
    | '/admin/$userId/$nominationId'
  id:
    | '__root__'
    | '/_headerLayout'
    | '/_headerLayout/_adminLayout'
    | '/_headerLayout/_statisticLayout'
    | '/_headerLayout/admin'
    | '/_headerLayout/'
    | '/_headerLayout/(dev)/complete'
    | '/_headerLayout/(dev)/result'
    | '/_headerLayout/(dev)/test'
    | '/_headerLayout/_statisticLayout/commonState'
    | '/_headerLayout/_statisticLayout/practiceState'
    | '/_headerLayout/_statisticLayout/theoryState'
    | '/_headerLayout/_adminLayout/admin/dashboard'
    | '/_headerLayout/_adminLayout/admin/users'
    | '/_headerLayout/_adminLayout/admin/$userId/$nominationId'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  HeaderLayoutRoute: typeof HeaderLayoutRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_headerLayout': {
      id: '/_headerLayout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof HeaderLayoutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_headerLayout/': {
      id: '/_headerLayout/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof HeaderLayoutIndexRouteImport
      parentRoute: typeof HeaderLayoutRoute
    }
    '/_headerLayout/admin': {
      id: '/_headerLayout/admin'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof HeaderLayoutAdminRouteImport
      parentRoute: typeof HeaderLayoutRoute
    }
    '/_headerLayout/_statisticLayout': {
      id: '/_headerLayout/_statisticLayout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof HeaderLayoutStatisticLayoutRouteImport
      parentRoute: typeof HeaderLayoutRoute
    }
    '/_headerLayout/_adminLayout': {
      id: '/_headerLayout/_adminLayout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof HeaderLayoutAdminLayoutRouteImport
      parentRoute: typeof HeaderLayoutRoute
    }
    '/_headerLayout/_statisticLayout/theoryState': {
      id: '/_headerLayout/_statisticLayout/theoryState'
      path: '/theoryState'
      fullPath: '/theoryState'
      preLoaderRoute: typeof HeaderLayoutStatisticLayoutTheoryStateRouteImport
      parentRoute: typeof HeaderLayoutStatisticLayoutRoute
    }
    '/_headerLayout/_statisticLayout/practiceState': {
      id: '/_headerLayout/_statisticLayout/practiceState'
      path: '/practiceState'
      fullPath: '/practiceState'
      preLoaderRoute: typeof HeaderLayoutStatisticLayoutPracticeStateRouteImport
      parentRoute: typeof HeaderLayoutStatisticLayoutRoute
    }
    '/_headerLayout/_statisticLayout/commonState': {
      id: '/_headerLayout/_statisticLayout/commonState'
      path: '/commonState'
      fullPath: '/commonState'
      preLoaderRoute: typeof HeaderLayoutStatisticLayoutCommonStateRouteImport
      parentRoute: typeof HeaderLayoutStatisticLayoutRoute
    }
    '/_headerLayout/(dev)/test': {
      id: '/_headerLayout/(dev)/test'
      path: '/test'
      fullPath: '/test'
      preLoaderRoute: typeof HeaderLayoutdevTestRouteImport
      parentRoute: typeof HeaderLayoutRoute
    }
    '/_headerLayout/(dev)/result': {
      id: '/_headerLayout/(dev)/result'
      path: '/result'
      fullPath: '/result'
      preLoaderRoute: typeof HeaderLayoutdevResultRouteImport
      parentRoute: typeof HeaderLayoutRoute
    }
    '/_headerLayout/(dev)/complete': {
      id: '/_headerLayout/(dev)/complete'
      path: '/complete'
      fullPath: '/complete'
      preLoaderRoute: typeof HeaderLayoutdevCompleteRouteImport
      parentRoute: typeof HeaderLayoutRoute
    }
    '/_headerLayout/_adminLayout/admin/users': {
      id: '/_headerLayout/_adminLayout/admin/users'
      path: '/admin/users'
      fullPath: '/admin/users'
      preLoaderRoute: typeof HeaderLayoutAdminLayoutAdminUsersRouteImport
      parentRoute: typeof HeaderLayoutAdminLayoutRoute
    }
    '/_headerLayout/_adminLayout/admin/dashboard': {
      id: '/_headerLayout/_adminLayout/admin/dashboard'
      path: '/admin/dashboard'
      fullPath: '/admin/dashboard'
      preLoaderRoute: typeof HeaderLayoutAdminLayoutAdminDashboardRouteImport
      parentRoute: typeof HeaderLayoutAdminLayoutRoute
    }
    '/_headerLayout/_adminLayout/admin/$userId/$nominationId': {
      id: '/_headerLayout/_adminLayout/admin/$userId/$nominationId'
      path: '/admin/$userId/$nominationId'
      fullPath: '/admin/$userId/$nominationId'
      preLoaderRoute: typeof HeaderLayoutAdminLayoutAdminUserIdNominationIdRouteImport
      parentRoute: typeof HeaderLayoutAdminLayoutRoute
    }
  }
}

interface HeaderLayoutAdminLayoutRouteChildren {
  HeaderLayoutAdminLayoutAdminDashboardRoute: typeof HeaderLayoutAdminLayoutAdminDashboardRoute
  HeaderLayoutAdminLayoutAdminUsersRoute: typeof HeaderLayoutAdminLayoutAdminUsersRoute
  HeaderLayoutAdminLayoutAdminUserIdNominationIdRoute: typeof HeaderLayoutAdminLayoutAdminUserIdNominationIdRoute
}

const HeaderLayoutAdminLayoutRouteChildren: HeaderLayoutAdminLayoutRouteChildren =
  {
    HeaderLayoutAdminLayoutAdminDashboardRoute:
      HeaderLayoutAdminLayoutAdminDashboardRoute,
    HeaderLayoutAdminLayoutAdminUsersRoute:
      HeaderLayoutAdminLayoutAdminUsersRoute,
    HeaderLayoutAdminLayoutAdminUserIdNominationIdRoute:
      HeaderLayoutAdminLayoutAdminUserIdNominationIdRoute,
  }

const HeaderLayoutAdminLayoutRouteWithChildren =
  HeaderLayoutAdminLayoutRoute._addFileChildren(
    HeaderLayoutAdminLayoutRouteChildren,
  )

interface HeaderLayoutStatisticLayoutRouteChildren {
  HeaderLayoutStatisticLayoutCommonStateRoute: typeof HeaderLayoutStatisticLayoutCommonStateRoute
  HeaderLayoutStatisticLayoutPracticeStateRoute: typeof HeaderLayoutStatisticLayoutPracticeStateRoute
  HeaderLayoutStatisticLayoutTheoryStateRoute: typeof HeaderLayoutStatisticLayoutTheoryStateRoute
}

const HeaderLayoutStatisticLayoutRouteChildren: HeaderLayoutStatisticLayoutRouteChildren =
  {
    HeaderLayoutStatisticLayoutCommonStateRoute:
      HeaderLayoutStatisticLayoutCommonStateRoute,
    HeaderLayoutStatisticLayoutPracticeStateRoute:
      HeaderLayoutStatisticLayoutPracticeStateRoute,
    HeaderLayoutStatisticLayoutTheoryStateRoute:
      HeaderLayoutStatisticLayoutTheoryStateRoute,
  }

const HeaderLayoutStatisticLayoutRouteWithChildren =
  HeaderLayoutStatisticLayoutRoute._addFileChildren(
    HeaderLayoutStatisticLayoutRouteChildren,
  )

interface HeaderLayoutRouteChildren {
  HeaderLayoutAdminLayoutRoute: typeof HeaderLayoutAdminLayoutRouteWithChildren
  HeaderLayoutStatisticLayoutRoute: typeof HeaderLayoutStatisticLayoutRouteWithChildren
  HeaderLayoutAdminRoute: typeof HeaderLayoutAdminRoute
  HeaderLayoutIndexRoute: typeof HeaderLayoutIndexRoute
  HeaderLayoutdevCompleteRoute: typeof HeaderLayoutdevCompleteRoute
  HeaderLayoutdevResultRoute: typeof HeaderLayoutdevResultRoute
  HeaderLayoutdevTestRoute: typeof HeaderLayoutdevTestRoute
}

const HeaderLayoutRouteChildren: HeaderLayoutRouteChildren = {
  HeaderLayoutAdminLayoutRoute: HeaderLayoutAdminLayoutRouteWithChildren,
  HeaderLayoutStatisticLayoutRoute:
    HeaderLayoutStatisticLayoutRouteWithChildren,
  HeaderLayoutAdminRoute: HeaderLayoutAdminRoute,
  HeaderLayoutIndexRoute: HeaderLayoutIndexRoute,
  HeaderLayoutdevCompleteRoute: HeaderLayoutdevCompleteRoute,
  HeaderLayoutdevResultRoute: HeaderLayoutdevResultRoute,
  HeaderLayoutdevTestRoute: HeaderLayoutdevTestRoute,
}

const HeaderLayoutRouteWithChildren = HeaderLayoutRoute._addFileChildren(
  HeaderLayoutRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  HeaderLayoutRoute: HeaderLayoutRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
