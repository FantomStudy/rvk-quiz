/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as AdminRouteImport } from './routes/admin'
import { Route as TestLayoutRouteImport } from './routes/_testLayout'
import { Route as StatisticLayoutRouteImport } from './routes/_statisticLayout'
import { Route as AdminLayoutRouteImport } from './routes/_adminLayout'
import { Route as IndexRouteImport } from './routes/index'
import { Route as TestLayoutTestRouteImport } from './routes/_testLayout/test'
import { Route as TestLayoutResultRouteImport } from './routes/_testLayout/result'
import { Route as TestLayoutCompleteRouteImport } from './routes/_testLayout/complete'
import { Route as StatisticLayoutTheoryStateRouteImport } from './routes/_statisticLayout/theoryState'
import { Route as StatisticLayoutPracticeStateRouteImport } from './routes/_statisticLayout/practiceState'
import { Route as StatisticLayoutCommonStateRouteImport } from './routes/_statisticLayout/commonState'
import { Route as AdminLayoutAdminUsersRouteImport } from './routes/_adminLayout/admin/users'
import { Route as AdminLayoutAdminDashboardRouteImport } from './routes/_adminLayout/admin/dashboard'
import { Route as AdminLayoutAdminUserIdNominationIdRouteImport } from './routes/_adminLayout/admin/$userId.$nominationId'

const AdminRoute = AdminRouteImport.update({
  id: '/admin',
  path: '/admin',
  getParentRoute: () => rootRouteImport,
} as any)
const TestLayoutRoute = TestLayoutRouteImport.update({
  id: '/_testLayout',
  getParentRoute: () => rootRouteImport,
} as any)
const StatisticLayoutRoute = StatisticLayoutRouteImport.update({
  id: '/_statisticLayout',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminLayoutRoute = AdminLayoutRouteImport.update({
  id: '/_adminLayout',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const TestLayoutTestRoute = TestLayoutTestRouteImport.update({
  id: '/test',
  path: '/test',
  getParentRoute: () => TestLayoutRoute,
} as any)
const TestLayoutResultRoute = TestLayoutResultRouteImport.update({
  id: '/result',
  path: '/result',
  getParentRoute: () => TestLayoutRoute,
} as any)
const TestLayoutCompleteRoute = TestLayoutCompleteRouteImport.update({
  id: '/complete',
  path: '/complete',
  getParentRoute: () => TestLayoutRoute,
} as any)
const StatisticLayoutTheoryStateRoute =
  StatisticLayoutTheoryStateRouteImport.update({
    id: '/theoryState',
    path: '/theoryState',
    getParentRoute: () => StatisticLayoutRoute,
  } as any)
const StatisticLayoutPracticeStateRoute =
  StatisticLayoutPracticeStateRouteImport.update({
    id: '/practiceState',
    path: '/practiceState',
    getParentRoute: () => StatisticLayoutRoute,
  } as any)
const StatisticLayoutCommonStateRoute =
  StatisticLayoutCommonStateRouteImport.update({
    id: '/commonState',
    path: '/commonState',
    getParentRoute: () => StatisticLayoutRoute,
  } as any)
const AdminLayoutAdminUsersRoute = AdminLayoutAdminUsersRouteImport.update({
  id: '/admin/users',
  path: '/admin/users',
  getParentRoute: () => AdminLayoutRoute,
} as any)
const AdminLayoutAdminDashboardRoute =
  AdminLayoutAdminDashboardRouteImport.update({
    id: '/admin/dashboard',
    path: '/admin/dashboard',
    getParentRoute: () => AdminLayoutRoute,
  } as any)
const AdminLayoutAdminUserIdNominationIdRoute =
  AdminLayoutAdminUserIdNominationIdRouteImport.update({
    id: '/admin/$userId/$nominationId',
    path: '/admin/$userId/$nominationId',
    getParentRoute: () => AdminLayoutRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/admin': typeof AdminRoute
  '/commonState': typeof StatisticLayoutCommonStateRoute
  '/practiceState': typeof StatisticLayoutPracticeStateRoute
  '/theoryState': typeof StatisticLayoutTheoryStateRoute
  '/complete': typeof TestLayoutCompleteRoute
  '/result': typeof TestLayoutResultRoute
  '/test': typeof TestLayoutTestRoute
  '/admin/dashboard': typeof AdminLayoutAdminDashboardRoute
  '/admin/users': typeof AdminLayoutAdminUsersRoute
  '/admin/$userId/$nominationId': typeof AdminLayoutAdminUserIdNominationIdRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/admin': typeof AdminRoute
  '/commonState': typeof StatisticLayoutCommonStateRoute
  '/practiceState': typeof StatisticLayoutPracticeStateRoute
  '/theoryState': typeof StatisticLayoutTheoryStateRoute
  '/complete': typeof TestLayoutCompleteRoute
  '/result': typeof TestLayoutResultRoute
  '/test': typeof TestLayoutTestRoute
  '/admin/dashboard': typeof AdminLayoutAdminDashboardRoute
  '/admin/users': typeof AdminLayoutAdminUsersRoute
  '/admin/$userId/$nominationId': typeof AdminLayoutAdminUserIdNominationIdRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/_adminLayout': typeof AdminLayoutRouteWithChildren
  '/_statisticLayout': typeof StatisticLayoutRouteWithChildren
  '/_testLayout': typeof TestLayoutRouteWithChildren
  '/admin': typeof AdminRoute
  '/_statisticLayout/commonState': typeof StatisticLayoutCommonStateRoute
  '/_statisticLayout/practiceState': typeof StatisticLayoutPracticeStateRoute
  '/_statisticLayout/theoryState': typeof StatisticLayoutTheoryStateRoute
  '/_testLayout/complete': typeof TestLayoutCompleteRoute
  '/_testLayout/result': typeof TestLayoutResultRoute
  '/_testLayout/test': typeof TestLayoutTestRoute
  '/_adminLayout/admin/dashboard': typeof AdminLayoutAdminDashboardRoute
  '/_adminLayout/admin/users': typeof AdminLayoutAdminUsersRoute
  '/_adminLayout/admin/$userId/$nominationId': typeof AdminLayoutAdminUserIdNominationIdRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/admin'
    | '/commonState'
    | '/practiceState'
    | '/theoryState'
    | '/complete'
    | '/result'
    | '/test'
    | '/admin/dashboard'
    | '/admin/users'
    | '/admin/$userId/$nominationId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/admin'
    | '/commonState'
    | '/practiceState'
    | '/theoryState'
    | '/complete'
    | '/result'
    | '/test'
    | '/admin/dashboard'
    | '/admin/users'
    | '/admin/$userId/$nominationId'
  id:
    | '__root__'
    | '/'
    | '/_adminLayout'
    | '/_statisticLayout'
    | '/_testLayout'
    | '/admin'
    | '/_statisticLayout/commonState'
    | '/_statisticLayout/practiceState'
    | '/_statisticLayout/theoryState'
    | '/_testLayout/complete'
    | '/_testLayout/result'
    | '/_testLayout/test'
    | '/_adminLayout/admin/dashboard'
    | '/_adminLayout/admin/users'
    | '/_adminLayout/admin/$userId/$nominationId'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AdminLayoutRoute: typeof AdminLayoutRouteWithChildren
  StatisticLayoutRoute: typeof StatisticLayoutRouteWithChildren
  TestLayoutRoute: typeof TestLayoutRouteWithChildren
  AdminRoute: typeof AdminRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/admin': {
      id: '/admin'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AdminRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_testLayout': {
      id: '/_testLayout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof TestLayoutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_statisticLayout': {
      id: '/_statisticLayout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof StatisticLayoutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_adminLayout': {
      id: '/_adminLayout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AdminLayoutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_testLayout/test': {
      id: '/_testLayout/test'
      path: '/test'
      fullPath: '/test'
      preLoaderRoute: typeof TestLayoutTestRouteImport
      parentRoute: typeof TestLayoutRoute
    }
    '/_testLayout/result': {
      id: '/_testLayout/result'
      path: '/result'
      fullPath: '/result'
      preLoaderRoute: typeof TestLayoutResultRouteImport
      parentRoute: typeof TestLayoutRoute
    }
    '/_testLayout/complete': {
      id: '/_testLayout/complete'
      path: '/complete'
      fullPath: '/complete'
      preLoaderRoute: typeof TestLayoutCompleteRouteImport
      parentRoute: typeof TestLayoutRoute
    }
    '/_statisticLayout/theoryState': {
      id: '/_statisticLayout/theoryState'
      path: '/theoryState'
      fullPath: '/theoryState'
      preLoaderRoute: typeof StatisticLayoutTheoryStateRouteImport
      parentRoute: typeof StatisticLayoutRoute
    }
    '/_statisticLayout/practiceState': {
      id: '/_statisticLayout/practiceState'
      path: '/practiceState'
      fullPath: '/practiceState'
      preLoaderRoute: typeof StatisticLayoutPracticeStateRouteImport
      parentRoute: typeof StatisticLayoutRoute
    }
    '/_statisticLayout/commonState': {
      id: '/_statisticLayout/commonState'
      path: '/commonState'
      fullPath: '/commonState'
      preLoaderRoute: typeof StatisticLayoutCommonStateRouteImport
      parentRoute: typeof StatisticLayoutRoute
    }
    '/_adminLayout/admin/users': {
      id: '/_adminLayout/admin/users'
      path: '/admin/users'
      fullPath: '/admin/users'
      preLoaderRoute: typeof AdminLayoutAdminUsersRouteImport
      parentRoute: typeof AdminLayoutRoute
    }
    '/_adminLayout/admin/dashboard': {
      id: '/_adminLayout/admin/dashboard'
      path: '/admin/dashboard'
      fullPath: '/admin/dashboard'
      preLoaderRoute: typeof AdminLayoutAdminDashboardRouteImport
      parentRoute: typeof AdminLayoutRoute
    }
    '/_adminLayout/admin/$userId/$nominationId': {
      id: '/_adminLayout/admin/$userId/$nominationId'
      path: '/admin/$userId/$nominationId'
      fullPath: '/admin/$userId/$nominationId'
      preLoaderRoute: typeof AdminLayoutAdminUserIdNominationIdRouteImport
      parentRoute: typeof AdminLayoutRoute
    }
  }
}

interface AdminLayoutRouteChildren {
  AdminLayoutAdminDashboardRoute: typeof AdminLayoutAdminDashboardRoute
  AdminLayoutAdminUsersRoute: typeof AdminLayoutAdminUsersRoute
  AdminLayoutAdminUserIdNominationIdRoute: typeof AdminLayoutAdminUserIdNominationIdRoute
}

const AdminLayoutRouteChildren: AdminLayoutRouteChildren = {
  AdminLayoutAdminDashboardRoute: AdminLayoutAdminDashboardRoute,
  AdminLayoutAdminUsersRoute: AdminLayoutAdminUsersRoute,
  AdminLayoutAdminUserIdNominationIdRoute:
    AdminLayoutAdminUserIdNominationIdRoute,
}

const AdminLayoutRouteWithChildren = AdminLayoutRoute._addFileChildren(
  AdminLayoutRouteChildren,
)

interface StatisticLayoutRouteChildren {
  StatisticLayoutCommonStateRoute: typeof StatisticLayoutCommonStateRoute
  StatisticLayoutPracticeStateRoute: typeof StatisticLayoutPracticeStateRoute
  StatisticLayoutTheoryStateRoute: typeof StatisticLayoutTheoryStateRoute
}

const StatisticLayoutRouteChildren: StatisticLayoutRouteChildren = {
  StatisticLayoutCommonStateRoute: StatisticLayoutCommonStateRoute,
  StatisticLayoutPracticeStateRoute: StatisticLayoutPracticeStateRoute,
  StatisticLayoutTheoryStateRoute: StatisticLayoutTheoryStateRoute,
}

const StatisticLayoutRouteWithChildren = StatisticLayoutRoute._addFileChildren(
  StatisticLayoutRouteChildren,
)

interface TestLayoutRouteChildren {
  TestLayoutCompleteRoute: typeof TestLayoutCompleteRoute
  TestLayoutResultRoute: typeof TestLayoutResultRoute
  TestLayoutTestRoute: typeof TestLayoutTestRoute
}

const TestLayoutRouteChildren: TestLayoutRouteChildren = {
  TestLayoutCompleteRoute: TestLayoutCompleteRoute,
  TestLayoutResultRoute: TestLayoutResultRoute,
  TestLayoutTestRoute: TestLayoutTestRoute,
}

const TestLayoutRouteWithChildren = TestLayoutRoute._addFileChildren(
  TestLayoutRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AdminLayoutRoute: AdminLayoutRouteWithChildren,
  StatisticLayoutRoute: StatisticLayoutRouteWithChildren,
  TestLayoutRoute: TestLayoutRouteWithChildren,
  AdminRoute: AdminRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
