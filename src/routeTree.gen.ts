/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './app/routes/__root'
import { Route as HeaderLayoutImport } from './app/routes/_headerLayout'
import { Route as AdminLayoutImport } from './app/routes/_adminLayout'
import { Route as HeaderLayoutIndexImport } from './app/routes/_headerLayout/index'
import { Route as HeaderLayoutAdminImport } from './app/routes/_headerLayout/admin'
import { Route as AdminLayoutAdminResultsImport } from './app/routes/_adminLayout/admin/results'
import { Route as AdminLayoutAdminAnalyticImport } from './app/routes/_adminLayout/admin/analytic'
import { Route as AdminLayoutAdminUsersIndexImport } from './app/routes/_adminLayout/admin/users/index'
import { Route as AdminLayoutAdminNominationsIndexImport } from './app/routes/_adminLayout/admin/nominations/index'
import { Route as AdminLayoutAdminBranchesIndexImport } from './app/routes/_adminLayout/admin/branches/index'
import { Route as AdminLayoutAdminUsersCreateImport } from './app/routes/_adminLayout/admin/users/create'
import { Route as AdminLayoutAdminUsersUserIdImport } from './app/routes/_adminLayout/admin/users/$userId'
import { Route as AdminLayoutAdminNominationsCreateImport } from './app/routes/_adminLayout/admin/nominations/create'
import { Route as AdminLayoutAdminNominationsNominationIdImport } from './app/routes/_adminLayout/admin/nominations/$nominationId'
import { Route as AdminLayoutAdminBranchesCreateImport } from './app/routes/_adminLayout/admin/branches/create'
import { Route as AdminLayoutAdminBranchesBranchIdImport } from './app/routes/_adminLayout/admin/branches/$branchId'
import { Route as AdminLayoutAdminNominationsNominationIdIndexImport } from './app/routes/_adminLayout/admin/nominations/$nominationId/index'
import { Route as AdminLayoutAdminNominationsNominationIdQuestionsIndexImport } from './app/routes/_adminLayout/admin/nominations/$nominationId/questions/index'
import { Route as AdminLayoutAdminNominationsNominationIdQuestionsCreateImport } from './app/routes/_adminLayout/admin/nominations/$nominationId/questions/create'
import { Route as AdminLayoutAdminNominationsNominationIdQuestionsQuestionIdImport } from './app/routes/_adminLayout/admin/nominations/$nominationId/questions/$questionId'

// Create/Update Routes

const HeaderLayoutRoute = HeaderLayoutImport.update({
  id: '/_headerLayout',
  getParentRoute: () => rootRoute,
} as any)

const AdminLayoutRoute = AdminLayoutImport.update({
  id: '/_adminLayout',
  getParentRoute: () => rootRoute,
} as any)

const HeaderLayoutIndexRoute = HeaderLayoutIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => HeaderLayoutRoute,
} as any)

const HeaderLayoutAdminRoute = HeaderLayoutAdminImport.update({
  id: '/admin',
  path: '/admin',
  getParentRoute: () => HeaderLayoutRoute,
} as any)

const AdminLayoutAdminResultsRoute = AdminLayoutAdminResultsImport.update({
  id: '/admin/results',
  path: '/admin/results',
  getParentRoute: () => AdminLayoutRoute,
} as any)

const AdminLayoutAdminAnalyticRoute = AdminLayoutAdminAnalyticImport.update({
  id: '/admin/analytic',
  path: '/admin/analytic',
  getParentRoute: () => AdminLayoutRoute,
} as any)

const AdminLayoutAdminUsersIndexRoute = AdminLayoutAdminUsersIndexImport.update(
  {
    id: '/admin/users/',
    path: '/admin/users/',
    getParentRoute: () => AdminLayoutRoute,
  } as any,
)

const AdminLayoutAdminNominationsIndexRoute =
  AdminLayoutAdminNominationsIndexImport.update({
    id: '/admin/nominations/',
    path: '/admin/nominations/',
    getParentRoute: () => AdminLayoutRoute,
  } as any)

const AdminLayoutAdminBranchesIndexRoute =
  AdminLayoutAdminBranchesIndexImport.update({
    id: '/admin/branches/',
    path: '/admin/branches/',
    getParentRoute: () => AdminLayoutRoute,
  } as any)

const AdminLayoutAdminUsersCreateRoute =
  AdminLayoutAdminUsersCreateImport.update({
    id: '/admin/users/create',
    path: '/admin/users/create',
    getParentRoute: () => AdminLayoutRoute,
  } as any)

const AdminLayoutAdminUsersUserIdRoute =
  AdminLayoutAdminUsersUserIdImport.update({
    id: '/admin/users/$userId',
    path: '/admin/users/$userId',
    getParentRoute: () => AdminLayoutRoute,
  } as any)

const AdminLayoutAdminNominationsCreateRoute =
  AdminLayoutAdminNominationsCreateImport.update({
    id: '/admin/nominations/create',
    path: '/admin/nominations/create',
    getParentRoute: () => AdminLayoutRoute,
  } as any)

const AdminLayoutAdminNominationsNominationIdRoute =
  AdminLayoutAdminNominationsNominationIdImport.update({
    id: '/admin/nominations/$nominationId',
    path: '/admin/nominations/$nominationId',
    getParentRoute: () => AdminLayoutRoute,
  } as any)

const AdminLayoutAdminBranchesCreateRoute =
  AdminLayoutAdminBranchesCreateImport.update({
    id: '/admin/branches/create',
    path: '/admin/branches/create',
    getParentRoute: () => AdminLayoutRoute,
  } as any)

const AdminLayoutAdminBranchesBranchIdRoute =
  AdminLayoutAdminBranchesBranchIdImport.update({
    id: '/admin/branches/$branchId',
    path: '/admin/branches/$branchId',
    getParentRoute: () => AdminLayoutRoute,
  } as any)

const AdminLayoutAdminNominationsNominationIdIndexRoute =
  AdminLayoutAdminNominationsNominationIdIndexImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => AdminLayoutAdminNominationsNominationIdRoute,
  } as any)

const AdminLayoutAdminNominationsNominationIdQuestionsIndexRoute =
  AdminLayoutAdminNominationsNominationIdQuestionsIndexImport.update({
    id: '/questions/',
    path: '/questions/',
    getParentRoute: () => AdminLayoutAdminNominationsNominationIdRoute,
  } as any)

const AdminLayoutAdminNominationsNominationIdQuestionsCreateRoute =
  AdminLayoutAdminNominationsNominationIdQuestionsCreateImport.update({
    id: '/questions/create',
    path: '/questions/create',
    getParentRoute: () => AdminLayoutAdminNominationsNominationIdRoute,
  } as any)

const AdminLayoutAdminNominationsNominationIdQuestionsQuestionIdRoute =
  AdminLayoutAdminNominationsNominationIdQuestionsQuestionIdImport.update({
    id: '/questions/$questionId',
    path: '/questions/$questionId',
    getParentRoute: () => AdminLayoutAdminNominationsNominationIdRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_adminLayout': {
      id: '/_adminLayout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AdminLayoutImport
      parentRoute: typeof rootRoute
    }
    '/_headerLayout': {
      id: '/_headerLayout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof HeaderLayoutImport
      parentRoute: typeof rootRoute
    }
    '/_headerLayout/admin': {
      id: '/_headerLayout/admin'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof HeaderLayoutAdminImport
      parentRoute: typeof HeaderLayoutImport
    }
    '/_headerLayout/': {
      id: '/_headerLayout/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof HeaderLayoutIndexImport
      parentRoute: typeof HeaderLayoutImport
    }
    '/_adminLayout/admin/analytic': {
      id: '/_adminLayout/admin/analytic'
      path: '/admin/analytic'
      fullPath: '/admin/analytic'
      preLoaderRoute: typeof AdminLayoutAdminAnalyticImport
      parentRoute: typeof AdminLayoutImport
    }
    '/_adminLayout/admin/results': {
      id: '/_adminLayout/admin/results'
      path: '/admin/results'
      fullPath: '/admin/results'
      preLoaderRoute: typeof AdminLayoutAdminResultsImport
      parentRoute: typeof AdminLayoutImport
    }
    '/_adminLayout/admin/branches/$branchId': {
      id: '/_adminLayout/admin/branches/$branchId'
      path: '/admin/branches/$branchId'
      fullPath: '/admin/branches/$branchId'
      preLoaderRoute: typeof AdminLayoutAdminBranchesBranchIdImport
      parentRoute: typeof AdminLayoutImport
    }
    '/_adminLayout/admin/branches/create': {
      id: '/_adminLayout/admin/branches/create'
      path: '/admin/branches/create'
      fullPath: '/admin/branches/create'
      preLoaderRoute: typeof AdminLayoutAdminBranchesCreateImport
      parentRoute: typeof AdminLayoutImport
    }
    '/_adminLayout/admin/nominations/$nominationId': {
      id: '/_adminLayout/admin/nominations/$nominationId'
      path: '/admin/nominations/$nominationId'
      fullPath: '/admin/nominations/$nominationId'
      preLoaderRoute: typeof AdminLayoutAdminNominationsNominationIdImport
      parentRoute: typeof AdminLayoutImport
    }
    '/_adminLayout/admin/nominations/create': {
      id: '/_adminLayout/admin/nominations/create'
      path: '/admin/nominations/create'
      fullPath: '/admin/nominations/create'
      preLoaderRoute: typeof AdminLayoutAdminNominationsCreateImport
      parentRoute: typeof AdminLayoutImport
    }
    '/_adminLayout/admin/users/$userId': {
      id: '/_adminLayout/admin/users/$userId'
      path: '/admin/users/$userId'
      fullPath: '/admin/users/$userId'
      preLoaderRoute: typeof AdminLayoutAdminUsersUserIdImport
      parentRoute: typeof AdminLayoutImport
    }
    '/_adminLayout/admin/users/create': {
      id: '/_adminLayout/admin/users/create'
      path: '/admin/users/create'
      fullPath: '/admin/users/create'
      preLoaderRoute: typeof AdminLayoutAdminUsersCreateImport
      parentRoute: typeof AdminLayoutImport
    }
    '/_adminLayout/admin/branches/': {
      id: '/_adminLayout/admin/branches/'
      path: '/admin/branches'
      fullPath: '/admin/branches'
      preLoaderRoute: typeof AdminLayoutAdminBranchesIndexImport
      parentRoute: typeof AdminLayoutImport
    }
    '/_adminLayout/admin/nominations/': {
      id: '/_adminLayout/admin/nominations/'
      path: '/admin/nominations'
      fullPath: '/admin/nominations'
      preLoaderRoute: typeof AdminLayoutAdminNominationsIndexImport
      parentRoute: typeof AdminLayoutImport
    }
    '/_adminLayout/admin/users/': {
      id: '/_adminLayout/admin/users/'
      path: '/admin/users'
      fullPath: '/admin/users'
      preLoaderRoute: typeof AdminLayoutAdminUsersIndexImport
      parentRoute: typeof AdminLayoutImport
    }
    '/_adminLayout/admin/nominations/$nominationId/': {
      id: '/_adminLayout/admin/nominations/$nominationId/'
      path: '/'
      fullPath: '/admin/nominations/$nominationId/'
      preLoaderRoute: typeof AdminLayoutAdminNominationsNominationIdIndexImport
      parentRoute: typeof AdminLayoutAdminNominationsNominationIdImport
    }
    '/_adminLayout/admin/nominations/$nominationId/questions/$questionId': {
      id: '/_adminLayout/admin/nominations/$nominationId/questions/$questionId'
      path: '/questions/$questionId'
      fullPath: '/admin/nominations/$nominationId/questions/$questionId'
      preLoaderRoute: typeof AdminLayoutAdminNominationsNominationIdQuestionsQuestionIdImport
      parentRoute: typeof AdminLayoutAdminNominationsNominationIdImport
    }
    '/_adminLayout/admin/nominations/$nominationId/questions/create': {
      id: '/_adminLayout/admin/nominations/$nominationId/questions/create'
      path: '/questions/create'
      fullPath: '/admin/nominations/$nominationId/questions/create'
      preLoaderRoute: typeof AdminLayoutAdminNominationsNominationIdQuestionsCreateImport
      parentRoute: typeof AdminLayoutAdminNominationsNominationIdImport
    }
    '/_adminLayout/admin/nominations/$nominationId/questions/': {
      id: '/_adminLayout/admin/nominations/$nominationId/questions/'
      path: '/questions'
      fullPath: '/admin/nominations/$nominationId/questions'
      preLoaderRoute: typeof AdminLayoutAdminNominationsNominationIdQuestionsIndexImport
      parentRoute: typeof AdminLayoutAdminNominationsNominationIdImport
    }
  }
}

// Create and export the route tree

interface AdminLayoutAdminNominationsNominationIdRouteChildren {
  AdminLayoutAdminNominationsNominationIdIndexRoute: typeof AdminLayoutAdminNominationsNominationIdIndexRoute
  AdminLayoutAdminNominationsNominationIdQuestionsQuestionIdRoute: typeof AdminLayoutAdminNominationsNominationIdQuestionsQuestionIdRoute
  AdminLayoutAdminNominationsNominationIdQuestionsCreateRoute: typeof AdminLayoutAdminNominationsNominationIdQuestionsCreateRoute
  AdminLayoutAdminNominationsNominationIdQuestionsIndexRoute: typeof AdminLayoutAdminNominationsNominationIdQuestionsIndexRoute
}

const AdminLayoutAdminNominationsNominationIdRouteChildren: AdminLayoutAdminNominationsNominationIdRouteChildren =
  {
    AdminLayoutAdminNominationsNominationIdIndexRoute:
      AdminLayoutAdminNominationsNominationIdIndexRoute,
    AdminLayoutAdminNominationsNominationIdQuestionsQuestionIdRoute:
      AdminLayoutAdminNominationsNominationIdQuestionsQuestionIdRoute,
    AdminLayoutAdminNominationsNominationIdQuestionsCreateRoute:
      AdminLayoutAdminNominationsNominationIdQuestionsCreateRoute,
    AdminLayoutAdminNominationsNominationIdQuestionsIndexRoute:
      AdminLayoutAdminNominationsNominationIdQuestionsIndexRoute,
  }

const AdminLayoutAdminNominationsNominationIdRouteWithChildren =
  AdminLayoutAdminNominationsNominationIdRoute._addFileChildren(
    AdminLayoutAdminNominationsNominationIdRouteChildren,
  )

interface AdminLayoutRouteChildren {
  AdminLayoutAdminAnalyticRoute: typeof AdminLayoutAdminAnalyticRoute
  AdminLayoutAdminResultsRoute: typeof AdminLayoutAdminResultsRoute
  AdminLayoutAdminBranchesBranchIdRoute: typeof AdminLayoutAdminBranchesBranchIdRoute
  AdminLayoutAdminBranchesCreateRoute: typeof AdminLayoutAdminBranchesCreateRoute
  AdminLayoutAdminNominationsNominationIdRoute: typeof AdminLayoutAdminNominationsNominationIdRouteWithChildren
  AdminLayoutAdminNominationsCreateRoute: typeof AdminLayoutAdminNominationsCreateRoute
  AdminLayoutAdminUsersUserIdRoute: typeof AdminLayoutAdminUsersUserIdRoute
  AdminLayoutAdminUsersCreateRoute: typeof AdminLayoutAdminUsersCreateRoute
  AdminLayoutAdminBranchesIndexRoute: typeof AdminLayoutAdminBranchesIndexRoute
  AdminLayoutAdminNominationsIndexRoute: typeof AdminLayoutAdminNominationsIndexRoute
  AdminLayoutAdminUsersIndexRoute: typeof AdminLayoutAdminUsersIndexRoute
}

const AdminLayoutRouteChildren: AdminLayoutRouteChildren = {
  AdminLayoutAdminAnalyticRoute: AdminLayoutAdminAnalyticRoute,
  AdminLayoutAdminResultsRoute: AdminLayoutAdminResultsRoute,
  AdminLayoutAdminBranchesBranchIdRoute: AdminLayoutAdminBranchesBranchIdRoute,
  AdminLayoutAdminBranchesCreateRoute: AdminLayoutAdminBranchesCreateRoute,
  AdminLayoutAdminNominationsNominationIdRoute:
    AdminLayoutAdminNominationsNominationIdRouteWithChildren,
  AdminLayoutAdminNominationsCreateRoute:
    AdminLayoutAdminNominationsCreateRoute,
  AdminLayoutAdminUsersUserIdRoute: AdminLayoutAdminUsersUserIdRoute,
  AdminLayoutAdminUsersCreateRoute: AdminLayoutAdminUsersCreateRoute,
  AdminLayoutAdminBranchesIndexRoute: AdminLayoutAdminBranchesIndexRoute,
  AdminLayoutAdminNominationsIndexRoute: AdminLayoutAdminNominationsIndexRoute,
  AdminLayoutAdminUsersIndexRoute: AdminLayoutAdminUsersIndexRoute,
}

const AdminLayoutRouteWithChildren = AdminLayoutRoute._addFileChildren(
  AdminLayoutRouteChildren,
)

interface HeaderLayoutRouteChildren {
  HeaderLayoutAdminRoute: typeof HeaderLayoutAdminRoute
  HeaderLayoutIndexRoute: typeof HeaderLayoutIndexRoute
}

const HeaderLayoutRouteChildren: HeaderLayoutRouteChildren = {
  HeaderLayoutAdminRoute: HeaderLayoutAdminRoute,
  HeaderLayoutIndexRoute: HeaderLayoutIndexRoute,
}

const HeaderLayoutRouteWithChildren = HeaderLayoutRoute._addFileChildren(
  HeaderLayoutRouteChildren,
)

export interface FileRoutesByFullPath {
  '': typeof HeaderLayoutRouteWithChildren
  '/admin': typeof HeaderLayoutAdminRoute
  '/': typeof HeaderLayoutIndexRoute
  '/admin/analytic': typeof AdminLayoutAdminAnalyticRoute
  '/admin/results': typeof AdminLayoutAdminResultsRoute
  '/admin/branches/$branchId': typeof AdminLayoutAdminBranchesBranchIdRoute
  '/admin/branches/create': typeof AdminLayoutAdminBranchesCreateRoute
  '/admin/nominations/$nominationId': typeof AdminLayoutAdminNominationsNominationIdRouteWithChildren
  '/admin/nominations/create': typeof AdminLayoutAdminNominationsCreateRoute
  '/admin/users/$userId': typeof AdminLayoutAdminUsersUserIdRoute
  '/admin/users/create': typeof AdminLayoutAdminUsersCreateRoute
  '/admin/branches': typeof AdminLayoutAdminBranchesIndexRoute
  '/admin/nominations': typeof AdminLayoutAdminNominationsIndexRoute
  '/admin/users': typeof AdminLayoutAdminUsersIndexRoute
  '/admin/nominations/$nominationId/': typeof AdminLayoutAdminNominationsNominationIdIndexRoute
  '/admin/nominations/$nominationId/questions/$questionId': typeof AdminLayoutAdminNominationsNominationIdQuestionsQuestionIdRoute
  '/admin/nominations/$nominationId/questions/create': typeof AdminLayoutAdminNominationsNominationIdQuestionsCreateRoute
  '/admin/nominations/$nominationId/questions': typeof AdminLayoutAdminNominationsNominationIdQuestionsIndexRoute
}

export interface FileRoutesByTo {
  '': typeof AdminLayoutRouteWithChildren
  '/admin': typeof HeaderLayoutAdminRoute
  '/': typeof HeaderLayoutIndexRoute
  '/admin/analytic': typeof AdminLayoutAdminAnalyticRoute
  '/admin/results': typeof AdminLayoutAdminResultsRoute
  '/admin/branches/$branchId': typeof AdminLayoutAdminBranchesBranchIdRoute
  '/admin/branches/create': typeof AdminLayoutAdminBranchesCreateRoute
  '/admin/nominations/create': typeof AdminLayoutAdminNominationsCreateRoute
  '/admin/users/$userId': typeof AdminLayoutAdminUsersUserIdRoute
  '/admin/users/create': typeof AdminLayoutAdminUsersCreateRoute
  '/admin/branches': typeof AdminLayoutAdminBranchesIndexRoute
  '/admin/nominations': typeof AdminLayoutAdminNominationsIndexRoute
  '/admin/users': typeof AdminLayoutAdminUsersIndexRoute
  '/admin/nominations/$nominationId': typeof AdminLayoutAdminNominationsNominationIdIndexRoute
  '/admin/nominations/$nominationId/questions/$questionId': typeof AdminLayoutAdminNominationsNominationIdQuestionsQuestionIdRoute
  '/admin/nominations/$nominationId/questions/create': typeof AdminLayoutAdminNominationsNominationIdQuestionsCreateRoute
  '/admin/nominations/$nominationId/questions': typeof AdminLayoutAdminNominationsNominationIdQuestionsIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_adminLayout': typeof AdminLayoutRouteWithChildren
  '/_headerLayout': typeof HeaderLayoutRouteWithChildren
  '/_headerLayout/admin': typeof HeaderLayoutAdminRoute
  '/_headerLayout/': typeof HeaderLayoutIndexRoute
  '/_adminLayout/admin/analytic': typeof AdminLayoutAdminAnalyticRoute
  '/_adminLayout/admin/results': typeof AdminLayoutAdminResultsRoute
  '/_adminLayout/admin/branches/$branchId': typeof AdminLayoutAdminBranchesBranchIdRoute
  '/_adminLayout/admin/branches/create': typeof AdminLayoutAdminBranchesCreateRoute
  '/_adminLayout/admin/nominations/$nominationId': typeof AdminLayoutAdminNominationsNominationIdRouteWithChildren
  '/_adminLayout/admin/nominations/create': typeof AdminLayoutAdminNominationsCreateRoute
  '/_adminLayout/admin/users/$userId': typeof AdminLayoutAdminUsersUserIdRoute
  '/_adminLayout/admin/users/create': typeof AdminLayoutAdminUsersCreateRoute
  '/_adminLayout/admin/branches/': typeof AdminLayoutAdminBranchesIndexRoute
  '/_adminLayout/admin/nominations/': typeof AdminLayoutAdminNominationsIndexRoute
  '/_adminLayout/admin/users/': typeof AdminLayoutAdminUsersIndexRoute
  '/_adminLayout/admin/nominations/$nominationId/': typeof AdminLayoutAdminNominationsNominationIdIndexRoute
  '/_adminLayout/admin/nominations/$nominationId/questions/$questionId': typeof AdminLayoutAdminNominationsNominationIdQuestionsQuestionIdRoute
  '/_adminLayout/admin/nominations/$nominationId/questions/create': typeof AdminLayoutAdminNominationsNominationIdQuestionsCreateRoute
  '/_adminLayout/admin/nominations/$nominationId/questions/': typeof AdminLayoutAdminNominationsNominationIdQuestionsIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/admin'
    | '/'
    | '/admin/analytic'
    | '/admin/results'
    | '/admin/branches/$branchId'
    | '/admin/branches/create'
    | '/admin/nominations/$nominationId'
    | '/admin/nominations/create'
    | '/admin/users/$userId'
    | '/admin/users/create'
    | '/admin/branches'
    | '/admin/nominations'
    | '/admin/users'
    | '/admin/nominations/$nominationId/'
    | '/admin/nominations/$nominationId/questions/$questionId'
    | '/admin/nominations/$nominationId/questions/create'
    | '/admin/nominations/$nominationId/questions'
  fileRoutesByTo: FileRoutesByTo
  to:
    | ''
    | '/admin'
    | '/'
    | '/admin/analytic'
    | '/admin/results'
    | '/admin/branches/$branchId'
    | '/admin/branches/create'
    | '/admin/nominations/create'
    | '/admin/users/$userId'
    | '/admin/users/create'
    | '/admin/branches'
    | '/admin/nominations'
    | '/admin/users'
    | '/admin/nominations/$nominationId'
    | '/admin/nominations/$nominationId/questions/$questionId'
    | '/admin/nominations/$nominationId/questions/create'
    | '/admin/nominations/$nominationId/questions'
  id:
    | '__root__'
    | '/_adminLayout'
    | '/_headerLayout'
    | '/_headerLayout/admin'
    | '/_headerLayout/'
    | '/_adminLayout/admin/analytic'
    | '/_adminLayout/admin/results'
    | '/_adminLayout/admin/branches/$branchId'
    | '/_adminLayout/admin/branches/create'
    | '/_adminLayout/admin/nominations/$nominationId'
    | '/_adminLayout/admin/nominations/create'
    | '/_adminLayout/admin/users/$userId'
    | '/_adminLayout/admin/users/create'
    | '/_adminLayout/admin/branches/'
    | '/_adminLayout/admin/nominations/'
    | '/_adminLayout/admin/users/'
    | '/_adminLayout/admin/nominations/$nominationId/'
    | '/_adminLayout/admin/nominations/$nominationId/questions/$questionId'
    | '/_adminLayout/admin/nominations/$nominationId/questions/create'
    | '/_adminLayout/admin/nominations/$nominationId/questions/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AdminLayoutRoute: typeof AdminLayoutRouteWithChildren
  HeaderLayoutRoute: typeof HeaderLayoutRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  AdminLayoutRoute: AdminLayoutRouteWithChildren,
  HeaderLayoutRoute: HeaderLayoutRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_adminLayout",
        "/_headerLayout"
      ]
    },
    "/_adminLayout": {
      "filePath": "_adminLayout.tsx",
      "children": [
        "/_adminLayout/admin/analytic",
        "/_adminLayout/admin/results",
        "/_adminLayout/admin/branches/$branchId",
        "/_adminLayout/admin/branches/create",
        "/_adminLayout/admin/nominations/$nominationId",
        "/_adminLayout/admin/nominations/create",
        "/_adminLayout/admin/users/$userId",
        "/_adminLayout/admin/users/create",
        "/_adminLayout/admin/branches/",
        "/_adminLayout/admin/nominations/",
        "/_adminLayout/admin/users/"
      ]
    },
    "/_headerLayout": {
      "filePath": "_headerLayout.tsx",
      "children": [
        "/_headerLayout/admin",
        "/_headerLayout/"
      ]
    },
    "/_headerLayout/admin": {
      "filePath": "_headerLayout/admin.tsx",
      "parent": "/_headerLayout"
    },
    "/_headerLayout/": {
      "filePath": "_headerLayout/index.tsx",
      "parent": "/_headerLayout"
    },
    "/_adminLayout/admin/analytic": {
      "filePath": "_adminLayout/admin/analytic.tsx",
      "parent": "/_adminLayout"
    },
    "/_adminLayout/admin/results": {
      "filePath": "_adminLayout/admin/results.tsx",
      "parent": "/_adminLayout"
    },
    "/_adminLayout/admin/branches/$branchId": {
      "filePath": "_adminLayout/admin/branches/$branchId.tsx",
      "parent": "/_adminLayout"
    },
    "/_adminLayout/admin/branches/create": {
      "filePath": "_adminLayout/admin/branches/create.tsx",
      "parent": "/_adminLayout"
    },
    "/_adminLayout/admin/nominations/$nominationId": {
      "filePath": "_adminLayout/admin/nominations/$nominationId.tsx",
      "parent": "/_adminLayout",
      "children": [
        "/_adminLayout/admin/nominations/$nominationId/",
        "/_adminLayout/admin/nominations/$nominationId/questions/$questionId",
        "/_adminLayout/admin/nominations/$nominationId/questions/create",
        "/_adminLayout/admin/nominations/$nominationId/questions/"
      ]
    },
    "/_adminLayout/admin/nominations/create": {
      "filePath": "_adminLayout/admin/nominations/create.tsx",
      "parent": "/_adminLayout"
    },
    "/_adminLayout/admin/users/$userId": {
      "filePath": "_adminLayout/admin/users/$userId.tsx",
      "parent": "/_adminLayout"
    },
    "/_adminLayout/admin/users/create": {
      "filePath": "_adminLayout/admin/users/create.tsx",
      "parent": "/_adminLayout"
    },
    "/_adminLayout/admin/branches/": {
      "filePath": "_adminLayout/admin/branches/index.tsx",
      "parent": "/_adminLayout"
    },
    "/_adminLayout/admin/nominations/": {
      "filePath": "_adminLayout/admin/nominations/index.tsx",
      "parent": "/_adminLayout"
    },
    "/_adminLayout/admin/users/": {
      "filePath": "_adminLayout/admin/users/index.tsx",
      "parent": "/_adminLayout"
    },
    "/_adminLayout/admin/nominations/$nominationId/": {
      "filePath": "_adminLayout/admin/nominations/$nominationId/index.tsx",
      "parent": "/_adminLayout/admin/nominations/$nominationId"
    },
    "/_adminLayout/admin/nominations/$nominationId/questions/$questionId": {
      "filePath": "_adminLayout/admin/nominations/$nominationId/questions/$questionId.tsx",
      "parent": "/_adminLayout/admin/nominations/$nominationId"
    },
    "/_adminLayout/admin/nominations/$nominationId/questions/create": {
      "filePath": "_adminLayout/admin/nominations/$nominationId/questions/create.tsx",
      "parent": "/_adminLayout/admin/nominations/$nominationId"
    },
    "/_adminLayout/admin/nominations/$nominationId/questions/": {
      "filePath": "_adminLayout/admin/nominations/$nominationId/questions/index.tsx",
      "parent": "/_adminLayout/admin/nominations/$nominationId"
    }
  }
}
ROUTE_MANIFEST_END */
